{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,UAAU,MAAM,aAAa,CAAC;AACrC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAC,CAAC,gDAAgD;AACrF,OAAO,SAAS,MAAM,oBAAoB,CAAC;AAC3C,OAAO,UAAU,MAAM,qBAAqB,CAAC;AAC7C,OAAO,QAAQ,MAAM,UAAU,CAAC;AAChC,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AACnD,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAEjE,MAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,kCAAkC;AAClC,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAE3C,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AAEtB,YAAY,CAAC,GAAG,CAAC,CAAC;AAElB,MAAM,YAAY,EAAE,CAAC;AAErB,MAAM,WAAW,GAAG;IAChB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,uBAAuB;IAC3D,oBAAoB,EAAE,GAAG;CAC5B,CAAC;AAEF,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAEjB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAEvD,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,+HAA+H,CAAC;AAE5K,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE;IACvB,wBAAwB,EAAE,KAAK;IAC/B,eAAe,EAAE,KAAK;CACzB,CAAC;KACG,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;KAC/C,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,GAAG,CAAC,CAAC,CAAC;AAErE,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;AAE7B,qCAAqC;AACrC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,GAAoB,EAAE,GAAqB,EAAE,IAA0B,EAAE,EAAE;IAC1F,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAC/C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,kCAAkC,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAClG,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACjB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,oDAAoD,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC;AAEH,eAAe,GAAG,CAAC","sourcesContent":["import express from 'express';\r\nimport cors from 'cors';\r\nimport bodyParser from 'body-parser';\r\nimport path from 'path';\r\nimport { fileURLToPath } from 'url'; // Import these to define __dirname in ES module\r\nimport urlRoutes from './routes/urlRoutes';\r\nimport authRoutes from './routes/authRoutes';\r\nimport mongoose from 'mongoose';\r\nimport dotenv from 'dotenv';\r\nimport { connectRedis } from './utils/redisClient';\r\nimport { limiter, configureApp } from './middleware/rateLimiter';\r\n\r\ndotenv.config();\r\n\r\n// Define __dirname for ES modules\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = path.dirname(__filename);\r\n\r\nconst app = express();\r\n\r\nconfigureApp(app);\r\n\r\nawait connectRedis();\r\n\r\nconst corsOptions = {\r\n    origin: process.env.FRONTEND_URL || 'http://localhost:3000',\r\n    optionsSuccessStatus: 200,\r\n};\r\n\r\napp.use(cors(corsOptions));\r\napp.use(bodyParser.json());\r\napp.use(limiter);\r\n\r\napp.use(express.static(path.join(__dirname, 'views')));\r\n\r\nconst mongoUri = process.env.MONGODB_URI || 'mongodb+srv://Chibuokem:BokesCrush1@firstcluster.mfzoh4u.mongodb.net/scissor?retryWrites=true&w=majority&appName=FirstCluster';\r\n\r\nmongoose.connect(mongoUri, {\r\n    serverSelectionTimeoutMS: 30000,\r\n    socketTimeoutMS: 45000,\r\n})\r\n    .then(() => console.log('Connected to MongoDB'))\r\n    .catch((err) => console.error('MongoDB connection error:', err));\r\n\r\napp.use('/api', urlRoutes);\r\napp.use('/auth', authRoutes);\r\n\r\n// Enhanced error handling middleware\r\napp.use((err: any, req: express.Request, res: express.Response, next: express.NextFunction) => {\r\n    console.error('An error occurred:', err.stack);\r\n    res.status(500).redirect(`/error.html?status=500&message=${encodeURIComponent(err.message)}`);\r\n});\r\n\r\napp.use((req, res) => {\r\n    res.status(404).redirect('/error.html?status=404&message=Route%20not%20found');\r\n});\r\n\r\nexport default app;\r\n"]}
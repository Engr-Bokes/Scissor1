{"version":3,"file":"redisClient.js","sourceRoot":"","sources":["../../src/utils/redisClient.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,OAAO,CAAC;AACrC,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,MAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,gFAAgF,CAAC;AAC3H,OAAO,CAAC,GAAG,CAAC,4BAA4B,QAAQ,EAAE,CAAC,CAAC;AAEpD,MAAM,WAAW,GAAG,YAAY,CAAC;IAC7B,GAAG,EAAE,QAAQ;IACb,MAAM,EAAE;QACJ,iBAAiB,EAAE,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,EAAE,IAAI,CAAC;KAC7D;CACJ,CAAC,CAAC;AAEH,WAAW,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC;AACnE,WAAW,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC,CAAC;AAE3E,MAAM,YAAY,GAAG,KAAK,IAAI,EAAE;IAC5B,IAAI,CAAC;QACD,MAAM,WAAW,CAAC,OAAO,EAAE,CAAC;IAChC,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACX,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAC;IACrD,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,KAAK,IAAI,EAAE;IAC/B,IAAI,CAAC;QACD,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IAC3C,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACX,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,GAAG,CAAC,CAAC;IAC1D,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,eAAe,EAAE,CAAC","sourcesContent":["import { createClient } from 'redis';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst redisUrl = process.env.REDIS_URL || 'redis://default:CntNvqNcCJwiSFHFIXcIXVOArPpapUVG@junction.proxy.rlwy.net:59640';\r\nconsole.log(`Connecting to Redis URL: ${redisUrl}`);\r\n\r\nconst redisClient = createClient({\r\n    url: redisUrl,\r\n    socket: {\r\n        reconnectStrategy: retries => Math.min(retries * 50, 2000),\r\n    },\r\n});\r\n\r\nredisClient.on('connect', () => console.log('Connected to Redis'));\r\nredisClient.on('error', (err) => console.error('Redis Client Error', err));\r\n\r\nconst connectRedis = async () => {\r\n    try {\r\n        await redisClient.connect();\r\n    } catch (err) {\r\n        console.error('Failed to connect to Redis', err);\r\n    }\r\n};\r\n\r\nconst disconnectRedis = async () => {\r\n    try {\r\n        await redisClient.quit();\r\n        console.log('Disconnected from Redis');\r\n    } catch (err) {\r\n        console.error('Failed to disconnect from Redis', err);\r\n    }\r\n};\r\n\r\nexport { redisClient, connectRedis, disconnectRedis };\r\n"]}